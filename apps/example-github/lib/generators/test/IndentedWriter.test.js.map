{"version":3,"file":"IndentedWriter.test.js","sourceRoot":"","sources":["../../../src/generators/test/IndentedWriter.test.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { IndentedWriter } from '../IndentedWriter';\n\ntest('01 Demo from docs', () => {\n  const indentedWriter: IndentedWriter = new IndentedWriter();\n  indentedWriter.write('begin\\n');\n  indentedWriter.increaseIndent();\n  indentedWriter.write('one\\ntwo\\n');\n  indentedWriter.decreaseIndent();\n  indentedWriter.increaseIndent();\n  indentedWriter.decreaseIndent();\n  indentedWriter.write('end');\n\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n\ntest('02 Indent something', () => {\n  const indentedWriter: IndentedWriter = new IndentedWriter();\n  indentedWriter.write('a');\n  indentedWriter.write('b');\n  indentedWriter.increaseIndent();\n  indentedWriter.writeLine('c');\n  indentedWriter.writeLine('d');\n  indentedWriter.decreaseIndent();\n  indentedWriter.writeLine('e');\n\n  indentedWriter.increaseIndent('>>> ');\n  indentedWriter.writeLine();\n  indentedWriter.writeLine();\n  indentedWriter.writeLine('g');\n  indentedWriter.decreaseIndent();\n\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n\ntest('03 Indent something with indentBlankLines=true', () => {\n  const indentedWriter: IndentedWriter = new IndentedWriter();\n  indentedWriter.indentBlankLines = true;\n\n  indentedWriter.write('a');\n  indentedWriter.write('b');\n  indentedWriter.increaseIndent();\n  indentedWriter.writeLine('c');\n  indentedWriter.writeLine('d');\n  indentedWriter.decreaseIndent();\n  indentedWriter.writeLine('e');\n\n  indentedWriter.increaseIndent('>>> ');\n  indentedWriter.writeLine();\n  indentedWriter.writeLine();\n  indentedWriter.writeLine('g');\n  indentedWriter.decreaseIndent();\n\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n\ntest('04 Two kinds of indents', () => {\n  const indentedWriter: IndentedWriter = new IndentedWriter();\n\n  indentedWriter.writeLine('---');\n  indentedWriter.indentScope(() => {\n    indentedWriter.write('a\\nb');\n    indentedWriter.indentScope(() => {\n      indentedWriter.write('c\\nd\\n');\n    });\n    indentedWriter.write('e\\n');\n  }, '> ');\n  indentedWriter.writeLine('---');\n\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n\ntest('05 Edge cases for ensureNewLine()', () => {\n  let indentedWriter: IndentedWriter = new IndentedWriter();\n  indentedWriter.ensureNewLine();\n  indentedWriter.write('line');\n  expect(indentedWriter.toString()).toMatchSnapshot();\n\n  indentedWriter = new IndentedWriter();\n  indentedWriter.write('previous');\n  indentedWriter.ensureNewLine();\n  indentedWriter.write('line');\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n\ntest('06 Edge cases for ensureSkippedLine()', () => {\n  let indentedWriter: IndentedWriter = new IndentedWriter();\n  indentedWriter.ensureSkippedLine();\n  indentedWriter.write('line');\n  expect(indentedWriter.toString()).toMatchSnapshot();\n\n  indentedWriter = new IndentedWriter();\n  indentedWriter.write('previous');\n  indentedWriter.ensureSkippedLine();\n  indentedWriter.write('line');\n  indentedWriter.ensureSkippedLine();\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n\ntest('06 trimLeadingSpaces=true', () => {\n  const indentedWriter: IndentedWriter = new IndentedWriter();\n  indentedWriter.trimLeadingSpaces = true;\n\n  // Example from doc comment\n  indentedWriter.increaseIndent('    ');\n  indentedWriter.write('  a\\n  b  c\\n');\n  indentedWriter.decreaseIndent();\n  indentedWriter.ensureSkippedLine();\n  indentedWriter.increaseIndent('>>');\n  indentedWriter.write(' ');\n  indentedWriter.write('   ');\n  indentedWriter.write(' a');\n  indentedWriter.writeLine('   b');\n  indentedWriter.writeLine('\\ttab'); // does not get indented\n  indentedWriter.writeLine('c  ');\n  expect(indentedWriter.toString()).toMatchSnapshot();\n});\n"]}
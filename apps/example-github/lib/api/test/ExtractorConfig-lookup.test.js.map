{"version":3,"file":"ExtractorConfig-lookup.test.js","sourceRoot":"","sources":["../../../src/api/test/ExtractorConfig-lookup.test.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;;;;;;;;;;;;;;;;;;;;;;;AAE3D,2CAA6B;AAC7B,oEAAoD;AAEpD,wDAAqD;AAErD,MAAM,cAAc,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;AAEjE,SAAS,gBAAgB,CAAC,KAAa,EAAE,KAAa;IACpD,IAAI,CAAC,wBAAI,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,sCAAsC,GAAG,KAAK,GAAG,WAAW,GAAG,KAAK,CAAC,CAAC;IAC7E,CAAC;AACH,CAAC;AAED,iGAAiG;AACjG,QAAQ,CAAC,GAAG,iCAAe,CAAC,IAAI,IAAI,iCAAe,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE;IAClF,EAAE,CAAC,IAAI,CAAC,+CAA+C,EAAE,GAAG,EAAE;QAC5D,MAAM,eAAe,GAAoB,iCAAe,CAAC,kBAAkB,CACzE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,mCAAmC,CAAC,CAC/D,CAAC;QACF,gBAAgB,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,IAAI,CAAC,sDAAsD,EAAE,GAAG,EAAE;QACnE,MAAM,eAAe,GAAoB,iCAAe,CAAC,kBAAkB,CACzE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,0CAA0C,CAAC,CACtE,CAAC;QACF,gBAAgB,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,gBAAgB,CAAC,CAAC,CAAC;IAC/F,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,IAAI,CAAC,gEAAgE,EAAE,GAAG,EAAE;QAC7E,MAAM,eAAe,GAAoB,iCAAe,CAAC,kBAAkB,CACzE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,mDAAmD,CAAC,CAC/E,CAAC;QACF,gBAAgB,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,0BAA0B,CAAC,CAAC,CAAC;IACzG,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport * as path from 'path';\nimport { Path } from '@rushstack/node-core-library';\n\nimport { ExtractorConfig } from '../ExtractorConfig';\n\nconst testDataFolder: string = path.join(__dirname, 'test-data');\n\nfunction expectEqualPaths(path1: string, path2: string): void {\n  if (!Path.isEqual(path1, path2)) {\n    fail('Expected paths to be equal:\\npath1: ' + path1 + '\\npath2: ' + path2);\n  }\n}\n\n// Tests for expanding the \"<lookup>\" token for the \"projectFolder\" setting in api-extractor.json\ndescribe(`${ExtractorConfig.name}.${ExtractorConfig.loadFileAndPrepare.name}`, () => {\n  it.only('config-lookup1: looks up ./api-extractor.json', () => {\n    const extractorConfig: ExtractorConfig = ExtractorConfig.loadFileAndPrepare(\n      path.join(testDataFolder, 'config-lookup1/api-extractor.json')\n    );\n    expectEqualPaths(extractorConfig.projectFolder, path.join(testDataFolder, 'config-lookup1'));\n  });\n  it.only('config-lookup2: looks up ./config/api-extractor.json', () => {\n    const extractorConfig: ExtractorConfig = ExtractorConfig.loadFileAndPrepare(\n      path.join(testDataFolder, 'config-lookup2/config/api-extractor.json')\n    );\n    expectEqualPaths(extractorConfig.projectFolder, path.join(testDataFolder, 'config-lookup2'));\n  });\n  it.only('config-lookup3a: looks up ./src/test/config/api-extractor.json', () => {\n    const extractorConfig: ExtractorConfig = ExtractorConfig.loadFileAndPrepare(\n      path.join(testDataFolder, 'config-lookup3/src/test/config/api-extractor.json')\n    );\n    expectEqualPaths(extractorConfig.projectFolder, path.join(testDataFolder, 'config-lookup3/src/test/'));\n  });\n});\n"]}